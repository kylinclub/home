package com.gitc.home.model;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.gitc.home.model.base.BaseSpeaker;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.IAtom;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Speaker extends BaseSpeaker<Speaker> {
	public static final Speaker dao = new Speaker();

	public List<Speaker> getAllSpeakersFromDb() {
		return dao.find("select * from `speaker` order by username asc");
	}

	public void saveOrUpdate(Speaker speaker) {
		if(speaker.get("id")==null){
			speaker.save();
		}else{
			speaker.update();
		}
	}

	public void importAll(final List<Speaker> speakers) {
		List<Speaker> oldps = getAllSpeakersFromDb();
		final Map<String,String> pic_map = new HashMap<String, String>();
		for(Speaker p : oldps){
			pic_map.put(p.getUsername(), p.getImage());
		}
		Db.tx(new IAtom() {
			public boolean run() throws SQLException {
				Db.update("delete from `speaker`");
				for(Speaker sp : speakers){
					sp.setImage(pic_map.get(sp.getUsername()));
					sp.save();
				}
				return true;
			}
		});
	}

	public List<Speaker> getAllSpeakers() {
		return dao.find("select * from `speaker` order by username asc");
	}

	public Speaker getSpeakerById(int id) {
		return dao.findById(id);
	}

	public List<Speaker> getAllSpeakers(int page, int count) {
		return dao.find("select * from `speaker` order by username asc limit ?,?", (page-1)*count, count);
	}
}
